WARNING: The return values reported here may be bugged on some systems.
          See https://github.com/gavinfielder/pft/issues/11
          Run in non-fork mode (-X) to ensure accurate return value
          reporting, set IGNORE_RETURN_VALUE=1 in options-config.ini,
          or run test_pipes.sh to see if your system has this bug.
          This bug does not affect the pass/fail result of a test, nor
          the function output--only the reported return value.


Test  11 (nocrash_nullspec_basic) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%");}
    SEGFAULT

Test  12 (nocrash_nullspec_5w) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%5");}
    SEGFAULT

Test  13 (nocrash_nullspec_5wzp) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%05");}
    SEGFAULT

Test  14 (nocrash_nullspec_5wzplj) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-05");}
    SEGFAULT

Test  15 (nocrash_nullspec_5wlj) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-5");}
    SEGFAULT

Test 339 (x_hexlmax) : FAILED.
    First line of code: {return test("%x", 4294967295u);}
      expected return value : 8
      your return value     : 9
      expected output : "ffffffff"
      your output     : "fffffffðf"
      expected (nonprintable as hex) : "ffffffff"
      actual   (nonprintable as hex) : "fffffff\xf0f"

Test 430 (p_void_width_fit) : FAILED.
    First line of code: {return test("%5.p", NULL);}
      expected return value : 5
      your return value     : 4
      expected output : "   0x"
      your output     : "  0x"
      expected (nonprintable as hex) : "   0x"
      actual   (nonprintable as hex) : "  0x"

Test 437 (p_basic) : FAILED.
    First line of code: {return test("%p%p%p%p%p%p%p%p%p%p%p%p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);}
      expected return value : 156
      your return value     : 157
      expected output : "0x1005fc4e80x1005fc4e90x1005fc4ea0x1005fc4ec0x1005fc4f00x1005fc4f40x1005fc4f80x1005fc5000x1005fc5080x1005fc5100x1005fc5180x1005fc520"
      your output     : "0x1005fc4ðe80x1005fc4e90x1005fc4ea0x1005fc4ec0x1005fc4f00x1005fc4f40x1005fc4f80x1005fc5000x1005fc5080x1005fc5100x1005fc5180x1005fc520"
      expected (nonprintable as hex) : "0x1005fc4e80x1005fc4e90x1005fc4ea0x1005fc4ec0x1005fc4f00x1005fc4f40x1005fc4f80x1005fc5000x1005fc5080x1005fc5100x1005fc5180x1005fc520"
      actual   (nonprintable as hex) : "0x1005fc4\xf0e80x1005fc4e90x1005fc4ea0x1005fc4ec0x1005fc4f00x1005fc4f40x1005fc4f80x1005fc5000x1005fc5080x1005fc5100x1005fc5180x1005fc520"

Test 438 (p_width_fit) : FAILED.
    First line of code: {return test("%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected return value : 1012
      your return value     : 1024
      expected output : "                                                           0x1005fc4e8                                                           0x1005fc4e9          "
      your output     : "                                                           0x1005fc4e8                                                           0x1005fc4ðe9         "
      expected (nonprintable as hex) : "                                                           0x1005fc4e8                                                           0x1005fc4e9          "
      actual   (nonprintable as hex) : "                                                           0x1005fc4e8                                                           0x1005fc4\xf0e9         "

Test 440 (p_width_16) : FAILED.
    First line of code: {return test("%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected return value : 222
      your return value     : 245
      expected output : "     0x1005fc4e8     0x1005fc4e9     0x1005fc4ea     0x1005fc4ec     0x1005fc4f0     0x1005fc4f4     0x1005fc4f8     0x1005fc500     0x1005fc508     0"
      your output     : "     0x1005fc4e8     0x1005fc4ðe9     0x1005fc4ðea     0x1005fc4ðec     0x1005fc4ðf0     0x1005fc4ðf4     0x1005fc4ðf8     0x1005fc5ð00     0x1005fc5ð"
      expected (nonprintable as hex) : "     0x1005fc4e8     0x1005fc4e9     0x1005fc4ea     0x1005fc4ec     0x1005fc4f0     0x1005fc4f4     0x1005fc4f8     0x1005fc500     0x1005fc508     0"
      actual   (nonprintable as hex) : "     0x1005fc4e8     0x1005fc4\xf0e9     0x1005fc4\xf0ea     0x1005fc4\xf0ec     0x1005fc4\xf0f0     0x1005fc4\xf0f4     0x1005fc4\xf0f8     0x1005fc5\xf000     0x1005fc5\xf0"

Test 441 (p_width_8) : FAILED.
    First line of code: {return test("%8p%8p%8p%8p%8p%8p%8p%8p%8p%8p%8p%8p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);}
      expected return value : 156
      your return value     : 157
      expected output : "0x1005fc4e80x1005fc4e90x1005fc4ea0x1005fc4ec0x1005fc4f00x1005fc4f40x1005fc4f80x1005fc5000x1005fc5080x1005fc5100x1005fc5180x1005fc520"
      your output     : "0x1005fc4ðe80x1005fc4e90x1005fc4ea0x1005fc4ec0x1005fc4f00x1005fc4f40x1005fc4f80x1005fc5000x1005fc5080x1005fc5100x1005fc5180x1005fc520"
      expected (nonprintable as hex) : "0x1005fc4e80x1005fc4e90x1005fc4ea0x1005fc4ec0x1005fc4f00x1005fc4f40x1005fc4f80x1005fc5000x1005fc5080x1005fc5100x1005fc5180x1005fc520"
      actual   (nonprintable as hex) : "0x1005fc4\xf0e80x1005fc4e90x1005fc4ea0x1005fc4ec0x1005fc4f00x1005fc4f40x1005fc4f80x1005fc5000x1005fc5080x1005fc5100x1005fc5180x1005fc520"

Test 442 (p_width_32) : FAILED.
    First line of code: {return test("%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected return value : 455
      your return value     : 467
      expected output : "                     0x1005fc4e8                     0x1005fc4e9                     0x1005fc4ea                     0x1005fc4ec                     0"
      your output     : "                     0x1005fc4e8                     0x1005fc4ðe9                     0x1005fc4ðea                     0x1005fc4ðec                   "
      expected (nonprintable as hex) : "                     0x1005fc4e8                     0x1005fc4e9                     0x1005fc4ea                     0x1005fc4ec                     0"
      actual   (nonprintable as hex) : "                     0x1005fc4e8                     0x1005fc4\xf0e9                     0x1005fc4\xf0ea                     0x1005fc4\xf0ec                   "

Test 443 (p_width_fit_lj) : FAILED.
    First line of code: {return test("%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 1012
      your return value     : 1069
      expected output : "0x1005fc4e8                                                           0x1005fc4e9                                                           0x1005fc4e"
      your output     : "0x1005fc4ðe8                                                           0x1005fc4ðe9                                                           0x1005fc"
      expected (nonprintable as hex) : "0x1005fc4e8                                                           0x1005fc4e9                                                           0x1005fc4e"
      actual   (nonprintable as hex) : "0x1005fc4\xf0e8                                                           0x1005fc4\xf0e9                                                           0x1005fc"

Test 445 (p_width_16_lj) : FAILED.
    First line of code: {return test("%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 222
      your return value     : 245
      expected output : "0x1005fc4e8     0x1005fc4e9     0x1005fc4ea     0x1005fc4ec     0x1005fc4f0     0x1005fc4f4     0x1005fc4f8     0x1005fc500     0x1005fc508     0x1005"
      your output     : "0x1005fc4e8     0x1005fc4ðe9     0x1005fc4ðea     0x1005fc4ðec     0x1005fc4ðf0     0x1005fc4ðf4     0x1005fc4ðf8     0x1005fc5ð00     0x1005fc5ð08   "
      expected (nonprintable as hex) : "0x1005fc4e8     0x1005fc4e9     0x1005fc4ea     0x1005fc4ec     0x1005fc4f0     0x1005fc4f4     0x1005fc4f8     0x1005fc500     0x1005fc508     0x1005"
      actual   (nonprintable as hex) : "0x1005fc4e8     0x1005fc4\xf0e9     0x1005fc4\xf0ea     0x1005fc4\xf0ec     0x1005fc4\xf0f0     0x1005fc4\xf0f4     0x1005fc4\xf0f8     0x1005fc5\xf000     0x1005fc5\xf008   "

Test 447 (p_width_32_lj) : FAILED.
    First line of code: {return test("%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected return value : 455
      your return value     : 467
      expected output : "0x1005fc4e8                     0x1005fc4e9                     0x1005fc4ea                     0x1005fc4ec                     0x1005fc4f0           "
      your output     : "0x1005fc4e8                     0x1005fc4ðe9                     0x1005fc4ðea                     0x1005fc4ðec                     0x1005fc4ðf0       "
      expected (nonprintable as hex) : "0x1005fc4e8                     0x1005fc4e9                     0x1005fc4ea                     0x1005fc4ec                     0x1005fc4f0           "
      actual   (nonprintable as hex) : "0x1005fc4e8                     0x1005fc4\xf0e9                     0x1005fc4\xf0ea                     0x1005fc4\xf0ec                     0x1005fc4\xf0f0       "

Test 479 (nocrash_noarg_1_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%1$"); }
    SEGFAULT

Test 480 (nocrash_noarg_2_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%0"); }
    SEGFAULT

Test 481 (nocrash_noarg_3_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("% "); }
    SEGFAULT

Test 482 (nocrash_noarg_4_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%#"); }
    SEGFAULT

Test 483 (nocrash_noarg_5_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-"); }
    SEGFAULT

Test 484 (nocrash_noarg_6_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%+"); }
    SEGFAULT

Test 485 (nocrash_noarg_9_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%23"); }
    SEGFAULT

Test 486 (nocrash_noarg_10_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%."); }
    SEGFAULT

Test 487 (nocrash_noarg_11_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%hh"); }
    SEGFAULT

Test 488 (nocrash_noarg_12_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%h"); }
    SEGFAULT

Test 489 (nocrash_noarg_13_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%ll"); }
    SEGFAULT

Test 490 (nocrash_noarg_14_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%l"); }
    SEGFAULT

Test 491 (nocrash_noarg_15_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%L"); }
    SEGFAULT

Test 497 (nocrash_noarg_22_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%f"); }
    SEGFAULT

Test 499 (nocrash_noarg_25_notmandatory) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%o"); }
    SEGFAULT

Test 615 (nocrash_mandatory_f_size_hh) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%hhf", 42.5);}
    SEGFAULT

Test 616 (nocrash_mandatory_f_size_h) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%hf", 42.5);}
    SEGFAULT

Test 617 (nocrash_mandatory_f_size_ll) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%llf", 42.5);}
    SEGFAULT

Test 618 (nocrash_mandatory_f_size_lll) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%lllf", 42.5);}
    SEGFAULT

Test 619 (nocrash_mandatory_f_size_llll) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%llllf", 42.5);}
    SEGFAULT

Test 620 (nocrash_mandatory_f_size_LL) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%LLf", 42.5);}
    SEGFAULT

Test 621 (nocrash_mandatory_f_size_Ll) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%Llf", 42.5);}
    SEGFAULT

Test 622 (nocrash_mandatory_f_size_lL) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%lLf", 42.5);}
    SEGFAULT

Test 623 (nocrash_mandatory_f_lj_nowidth) : FAILED.
    (nocrash test: automatically passes provided no unexpected failure)
    First line of code: {return test("%-f", 42.5);}
    SEGFAULT

