Test  91 (s_prec_03_no_width_s_null) : FAILED.
    First line of code: {return test("%.03s", NULL);}
      expected output : "(nu"
      your output     : "(null)"
      expected (nonprintable as hex) : "(nu"
      actual   (nonprintable as hex) : "(null)"

Test  99 (s_prec_0_width_3_s_null) : FAILED.
    First line of code: {return test("%3.s", NULL);}
      expected output : "   "
      your output     : "   (null)"
      expected (nonprintable as hex) : "   "
      actual   (nonprintable as hex) : "   (null)"

Test 100 (s_prec_0_width_10_s_null) : FAILED.
    First line of code: {return test("%10.s", NULL);}
      expected output : "          "
      your output     : "          (null)"
      expected (nonprintable as hex) : "          "
      actual   (nonprintable as hex) : "          (null)"

Test 106 (s_prec_0_lj_width_3_s_null) : FAILED.
    First line of code: {return test("%-3.s", NULL);}
      expected output : "   "
      your output     : "(null)   "
      expected (nonprintable as hex) : "   "
      actual   (nonprintable as hex) : "(null)   "

Test 107 (s_prec_0_lj_width_8_s_null) : FAILED.
    First line of code: {return test("%-8.s", NULL);}
      expected output : "        "
      your output     : "(null)        "
      expected (nonprintable as hex) : "        "
      actual   (nonprintable as hex) : "(null)        "

Test 113 (s_prec_1_width_3_s_null) : FAILED.
    First line of code: {return test("%3.1s", NULL);}
      expected output : "  ("
      your output     : "  (null)"
      expected (nonprintable as hex) : "  ("
      actual   (nonprintable as hex) : "  (null)"

Test 114 (s_prec_1_width_9_s_null) : FAILED.
    First line of code: {return test("%9.1s", NULL);}
      expected output : "        ("
      your output     : "        (null)"
      expected (nonprintable as hex) : "        ("
      actual   (nonprintable as hex) : "        (null)"

Test 117 (s_prec_1_lj_width_3_s_null) : FAILED.
    First line of code: {return test("%-3.1s", NULL);}
      expected output : "(  "
      your output     : "(null)  "
      expected (nonprintable as hex) : "(  "
      actual   (nonprintable as hex) : "(null)  "

Test 118 (s_prec_1_lj_width_9_s_null) : FAILED.
    First line of code: {return test("%-9.1s", NULL);}
      expected output : "(        "
      your output     : "(null)        "
      expected (nonprintable as hex) : "(        "
      actual   (nonprintable as hex) : "(null)        "

Test 178 (p_ftfc_5w_throwswarning) : FAILED.
    First line of code: {return test("%5p", 0);}
      expected output : "  0x0"
      your output     : "0x    0"
      expected (nonprintable as hex) : "  0x0"
      actual   (nonprintable as hex) : "0x    0"

Test 179 (p_basic) : FAILED.
    First line of code: {return test("%p%p%p%p%p%p%p%p%p%p%p%p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);}
      expected output : "0x109946ee80x109946ee90x109946eea0x109946eec0x109946ef00x109946ef40x109946ef80x109946f000x109946f080x109946f100x109946f180x109946f20"
      your output     : "0x109946e0e80x109946ee90x109946eea0x109946eec0x109946ef00x109946ef40x109946ef80x109946f000x109946f080x109946f100x109946f180x109946f20"
      expected (nonprintable as hex) : "0x109946ee80x109946ee90x109946eea0x109946eec0x109946ef00x109946ef40x109946ef80x109946f000x109946f080x109946f100x109946f180x109946f20"
      actual   (nonprintable as hex) : "0x109946e0e80x109946ee90x109946eea0x109946eec0x109946ef00x109946ef40x109946ef80x109946f000x109946f080x109946f100x109946f180x109946f20"

Test 180 (p_width_fit) : FAILED.
    First line of code: {return test("%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p%70p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected output : "                                                           0x109946ee8                                                           0x109946ee9          "
      your output     : "0x                                                             109946ee80x                                                             109946e0e90x   "
      expected (nonprintable as hex) : "                                                           0x109946ee8                                                           0x109946ee9          "
      actual   (nonprintable as hex) : "0x                                                             109946ee80x                                                             109946e0e90x   "

Test 181 (p_width_nofit) : FAILED.
    First line of code: {return test("%5p%5p%5p%5p%5p%5p%5p%5p%5p%5p%5p%5p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);}
      expected output : "0x109946ee80x109946ee90x109946eea0x109946eec0x109946ef00x109946ef40x109946ef80x109946f000x109946f080x109946f100x109946f180x109946f20"
      your output     : "0x109946e0e80x109946ee90x109946eea0x109946eec0x109946ef00x109946ef40x109946ef80x109946f000x109946f080x109946f100x109946f180x109946f20"
      expected (nonprintable as hex) : "0x109946ee80x109946ee90x109946eea0x109946eec0x109946ef00x109946ef40x109946ef80x109946f000x109946f080x109946f100x109946f180x109946f20"
      actual   (nonprintable as hex) : "0x109946e0e80x109946ee90x109946eea0x109946eec0x109946ef00x109946ef40x109946ef80x109946f000x109946f080x109946f100x109946f180x109946f20"

Test 182 (p_width_16) : FAILED.
    First line of code: {return test("%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p%16p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected output : "     0x109946ee8     0x109946ee9     0x109946eea     0x109946eec     0x109946ef0     0x109946ef4     0x109946ef8     0x109946f00     0x109946f08     0"
      your output     : "0x       109946ee80x       109946e0e90x       109946e0ea0x       109946e0ec0x       109946e0f00x       109946e0f40x       109946e0f80x       109946f00"
      expected (nonprintable as hex) : "     0x109946ee8     0x109946ee9     0x109946eea     0x109946eec     0x109946ef0     0x109946ef4     0x109946ef8     0x109946f00     0x109946f08     0"
      actual   (nonprintable as hex) : "0x       109946ee80x       109946e0e90x       109946e0ea0x       109946e0ec0x       109946e0f00x       109946e0f40x       109946e0f80x       109946f00"

Test 184 (p_width_32) : FAILED.
    First line of code: {return test("%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p%32p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10,&a11,&a12);      expected output : "                     0x109946ee8                     0x109946ee9                     0x109946eea                     0x109946eec                     0"
      your output     : "0x                       109946e0e80x                       109946e0e90x                       109946e0ea0x                       109946e0ec0x        "
      expected (nonprintable as hex) : "                     0x109946ee8                     0x109946ee9                     0x109946eea                     0x109946eec                     0"
      actual   (nonprintable as hex) : "0x                       109946e0e80x                       109946e0e90x                       109946e0ea0x                       109946e0ec0x        "

Test 185 (p_width_fit_lj) : FAILED.
    First line of code: {return test("%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p%-70p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected output : "0x109946ee8                                                           0x109946ee9                                                           0x109946ee"
      your output     : "0x109946ee8                                                             0x109946e0e9                                                             0x109"
      expected (nonprintable as hex) : "0x109946ee8                                                           0x109946ee9                                                           0x109946ee"
      actual   (nonprintable as hex) : "0x109946ee8                                                             0x109946e0e9                                                             0x109"

Test 187 (p_width_16_lj) : FAILED.
    First line of code: {return test("%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p%-16p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected output : "0x109946ee8     0x109946ee9     0x109946eea     0x109946eec     0x109946ef0     0x109946ef4     0x109946ef8     0x109946f00     0x109946f08     0x1099"
      your output     : "0x109946e0e8       0x109946e0e9       0x109946e0deHýa€              0x109946e0ec       0x109946e0f0       0x109946e0f4       0x109946e0hfHý8€     "
      expected (nonprintable as hex) : "0x109946ee8     0x109946ee9     0x109946eea     0x109946eec     0x109946ef0     0x109946ef4     0x109946ef8     0x109946f00     0x109946f08     0x1099"
      actual   (nonprintable as hex) : "0x109946e0e8       0x109946e0e9       0x109946e0de\x0cH\xfd\x07a\x80              0x109946e0ec       0x109946e0f0       0x109946e0f4       0x109946e0hf\x0cH\xfd\x078\x80     "

Test 189 (p_width_32_lj) : FAILED.
    First line of code: {return test("%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p%-32p",&a01,&a02,&a03,&a04,&a05,&a06,&a07,&a08,&a09,&a10      expected output : "0x109946ee8                     0x109946ee9                     0x109946eea                     0x109946eec                     0x109946ef0           "
      your output     : "0x109946e0e8                       0x109946e0e9                       0x109946e0deHýa€                                              0x109946e0ec    "
      expected (nonprintable as hex) : "0x109946ee8                     0x109946ee9                     0x109946eea                     0x109946eec                     0x109946ef0           "
      actual   (nonprintable as hex) : "0x109946e0e8                       0x109946e0e9                       0x109946e0de\x0cH\xfd\x07a\x80                                              0x109946e0ec    "

Test 196 (d_intmax) : FAILED.
    First line of code: {return test("%d",  2147483647);}
      expected output : "2147483647"
      your output     : "21474830647"
      expected (nonprintable as hex) : "2147483647"
      actual   (nonprintable as hex) : "21474830647"

Test 220 (d_zp_neg_fits) : FAILED.
    First line of code: {return test("%07d", -54);}
      expected output : "-000054"
      your output     : "0000-54"
      expected (nonprintable as hex) : "-000054"
      actual   (nonprintable as hex) : "0000-54"

Test 274 (i_intmin) : FAILED.
    First line of code: {return test("%i", (int)(-2147483678));}
      expected output : "2147483618"
      your output     : "21474830618"
      expected (nonprintable as hex) : "2147483618"
      actual   (nonprintable as hex) : "21474830618"

Test 297 (i_zp_neg_fits) : FAILED.
    First line of code: {return test("%07i", -54);}
      expected output : "-000054"
      your output     : "0000-54"
      expected (nonprintable as hex) : "-000054"
      actual   (nonprintable as hex) : "0000-54"

Test 392 (x_hexlmax) : FAILED.
    First line of code: {return test("%x", 4294967295u);}
      expected output : "ffffffff"
      your output     : "fffffff0f"
      expected (nonprintable as hex) : "ffffffff"
      actual   (nonprintable as hex) : "fffffff0f"

Test 488 (new2019_star_10) : FAILED.
    First line of code: {return test("%0*i", 7, -54);}
      expected output : "-000054"
      your output     : "0000-54"
      expected (nonprintable as hex) : "-000054"
      actual   (nonprintable as hex) : "0000-54"

Test 492 (new2019_negstar_4) : FAILED.
    First line of code: {return test("%.*s", -3, "hello");}
      expected output : "hello"
      your output     : "   "
      expected (nonprintable as hex) : "hello"
      actual   (nonprintable as hex) : "   "

Test 493 (new2019_negstar_5) : FAILED.
    First line of code: {return test("%-*.*s", -7, -3, "yolo");}
      expected output : "yolo   "
      your output     : "          "
      expected (nonprintable as hex) : "yolo   "
      actual   (nonprintable as hex) : "          "

Test 589 (moul_d_8) : FAILED.
    First line of code: {return test("%d", INT_MIN - 1);}
      expected output : "2147483647"
      your output     : "21474830647"
      expected (nonprintable as hex) : "2147483647"
      actual   (nonprintable as hex) : "21474830647"

Test 594 (moul_mix_1) : FAILED.
    First line of code: {int r00 = 0; return test("Lalalala, %d%% des gens qui parlent Ã  Ly adorent %s. Ou Presque. %p", 100, "Ly", &r00);}
      expected output : "Lalalala, 100% des gens qui parlent Ã  Ly adorent Ly. Ou Presque. 0x7ffee63a18cc"
      your output     : "Lalalala, 100% des gens qui parlent Ã  Ly adorent Ly. Ou Presque. 0x7ffee630a18cc"
      expected (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly. Ou Presque. 0x7ffee63a18cc"
      actual   (nonprintable as hex) : "Lalalala, 100% des gens qui parlent \xc3\xa0 Ly adorent Ly. Ou Presque. 0x7ffee630a18cc"

Test 600 (moul_i_6) : FAILED.
    First line of code: {return test("%i", INT_MAX);}
      expected output : "2147483647"
      your output     : "21474830647"
      expected (nonprintable as hex) : "2147483647"
      actual   (nonprintable as hex) : "21474830647"

Test 603 (moul_i_9) : FAILED.
    First line of code: {return test("%i", INT_MAX + 1);}
      expected output : "-2147483648"
      your output     : "-21474830648"
      expected (nonprintable as hex) : "-2147483648"
      actual   (nonprintable as hex) : "-21474830648"

Test 609 (moul_u_3) : FAILED.
    First line of code: {return test("Il fait au moins %u
", -8000);}
      expected output : "Il fait au moins 4294959296
"
      your output     : "Il fait au moins 42949590296
"
      expected (nonprintable as hex) : "Il fait au moins 4294959296\x0a"
      actual   (nonprintable as hex) : "Il fait au moins 42949590296\x0a"

Test 615 (moul_u_9) : FAILED.
    First line of code: {return test("%u", INT_MAX + 1);}
      expected output : "2147483648"
      your output     : "21474830648"
      expected (nonprintable as hex) : "2147483648"
      actual   (nonprintable as hex) : "21474830648"

Test 621 (moul_x_3) : FAILED.
    First line of code: {return test("Il fait au moins %x
", -8000);}
      expected output : "Il fait au moins ffffe0c0
"
      your output     : "Il fait au moins ffffe0c00
"
      expected (nonprintable as hex) : "Il fait au moins ffffe0c0\x0a"
      actual   (nonprintable as hex) : "Il fait au moins ffffe0c00\x0a"

Test 624 (moul_x_6) : FAILED.
    First line of code: {return test("%x", INT_MAX);}
      expected output : "7fffffff"
      your output     : "7ffffff0f"
      expected (nonprintable as hex) : "7fffffff"
      actual   (nonprintable as hex) : "7ffffff0f"

Test 626 (moul_x_8) : FAILED.
    First line of code: {return test("%x", INT_MIN - 1);}
      expected output : "7fffffff"
      your output     : "7ffffff0f"
      expected (nonprintable as hex) : "7fffffff"
      actual   (nonprintable as hex) : "7ffffff0f"

Test 640 (moul_leftjusty_2) : FAILED.
    First line of code: {return test("%%-d 42 == %-d
", INT_MIN);}
      expected output : "%-d 42 == -2147483648
"
      your output     : "%-d 42 == -21474830648
"
      expected (nonprintable as hex) : "%-d 42 == -2147483648\x0a"
      actual   (nonprintable as hex) : "%-d 42 == -21474830648\x0a"

Test 647 (moul_star_2) : FAILED.
    First line of code: {return test("%% *.5i 42 == |% *.5i|
", 4, 42);}
      expected output : "% *.5i 42 == | 00042|
"
      your output     : "% *.5i 42 == |00042|
"
      expected (nonprintable as hex) : "% *.5i 42 == | 00042|\x0a"
      actual   (nonprintable as hex) : "% *.5i 42 == |00042|\x0a"

Test 652 (mix_test_1) : FAILED.
    First line of code: {return test(
      expected output : "  eb    G    EB    Hello, World!    235    0x109936310  "
      your output     : "  eb    G    EB    Hello, World!    235    0x1099363010  "
      expected (nonprintable as hex) : "  eb    G    EB    Hello, World!    235    0x109936310  "
      actual   (nonprintable as hex) : "  eb    G    EB    Hello, World!    235    0x1099363010  "

Test 657 (mix_test_6) : FAILED.
    First line of code: {return test(
      expected output : "  0x109936310    eb    42    G    Hello, World!    235  "
      your output     : "  0x1099363010    eb    42    G    Hello, World!    235  "
      expected (nonprintable as hex) : "  0x109936310    eb    42    G    Hello, World!    235  "
      actual   (nonprintable as hex) : "  0x1099363010    eb    42    G    Hello, World!    235  "

Test 659 (mix_test_8) : FAILED.
    First line of code: {return test(
      expected output : "  EB    0x109936310    Hello, World!    %    235    eb  "
      your output     : "  EB    0x1099363010    Hello, World!    %    235    eb  "
      expected (nonprintable as hex) : "  EB    0x109936310    Hello, World!    %    235    eb  "
      actual   (nonprintable as hex) : "  EB    0x1099363010    Hello, World!    %    235    eb  "

Test 662 (mix_test_11) : FAILED.
    First line of code: {return test(
      expected output : "  EB    G    0x109936310    eb    42    235  "
      your output     : "  EB    G    0x1099363010    eb    42    235  "
      expected (nonprintable as hex) : "  EB    G    0x109936310    eb    42    235  "
      actual   (nonprintable as hex) : "  EB    G    0x1099363010    eb    42    235  "

Test 666 (mix_test_15) : FAILED.
    First line of code: {return test(
      expected output : "  235    G    EB    eb    0x109936310    Hello, World!  "
      your output     : "  235    G    EB    eb    0x1099363010    Hello, World!  "
      expected (nonprintable as hex) : "  235    G    EB    eb    0x109936310    Hello, World!  "
      actual   (nonprintable as hex) : "  235    G    EB    eb    0x1099363010    Hello, World!  "

Test 671 (mix_test_20) : FAILED.
    First line of code: {return test(
      expected output : "  G    Hello, World!    %    235    0x109936310    eb  "
      your output     : "  G    Hello, World!    %    235    0x1099363010    eb  "
      expected (nonprintable as hex) : "  G    Hello, World!    %    235    0x109936310    eb  "
      actual   (nonprintable as hex) : "  G    Hello, World!    %    235    0x1099363010    eb  "

Test 674 (mix_test_23) : FAILED.
    First line of code: {return test(
      expected output : "  eb    G    EB    0x109936310    Hello, World!    0x109936310  "
      your output     : "  eb    G    EB    0x1099363010    Hello, World!    0x109936310  "
      expected (nonprintable as hex) : "  eb    G    EB    0x109936310    Hello, World!    0x109936310  "
      actual   (nonprintable as hex) : "  eb    G    EB    0x1099363010    Hello, World!    0x109936310  "

Test 676 (mix_test_25) : FAILED.
    First line of code: {return test(
    SEGFAULT

Test 677 (mix_test_26) : FAILED.
    First line of code: {return test(
      expected output : "  EB    G    42    235    eb    0x109936310  "
      your output     : "  EB    G    42    235    eb    0x1099363010  "
      expected (nonprintable as hex) : "  EB    G    42    235    eb    0x109936310  "
      actual   (nonprintable as hex) : "  EB    G    42    235    eb    0x1099363010  "

Test 682 (mix_test_31) : FAILED.
    First line of code: {return test(
      expected output : "  %    235    0x109936310    42    EB    G  "
      your output     : "  %    235    0x1099363010    42    EB    G  "
      expected (nonprintable as hex) : "  %    235    0x109936310    42    EB    G  "
      actual   (nonprintable as hex) : "  %    235    0x1099363010    42    EB    G  "

Test 684 (mix_test_33) : FAILED.
    First line of code: {return test(
      expected output : "  G    %    Hello, World!    EB    eb    0x109936310  "
      your output     : "  G    %    Hello, World!    EB    eb    0x1099363010  "
      expected (nonprintable as hex) : "  G    %    Hello, World!    EB    eb    0x109936310  "
      actual   (nonprintable as hex) : "  G    %    Hello, World!    EB    eb    0x1099363010  "

Test 686 (mix_test_35) : FAILED.
    First line of code: {return test(
      expected output : "  0x109936310    235    Hello, World!    EB    G    0x109936310  "
      your output     : "  0x109936310    235    Hello, World!    EB    G    0x109999363306310  "
      expected (nonprintable as hex) : "  0x109936310    235    Hello, World!    EB    G    0x109936310  "
      actual   (nonprintable as hex) : "  0x109936310    235    Hello, World!    EB    G    0x109999363306310  "

Test 687 (mix_test_36) : FAILED.
    First line of code: {return test(
      expected output : "  EB    Hello, World!    eb    0x109936310    %    42  "
      your output     : "  EB    Hello, World!    eb    0x1099363010    %    42  "
      expected (nonprintable as hex) : "  EB    Hello, World!    eb    0x109936310    %    42  "
      actual   (nonprintable as hex) : "  EB    Hello, World!    eb    0x1099363010    %    42  "

Test 690 (mix_test_39) : FAILED.
    First line of code: {return test(
      expected output : "  0x109936310    42    eb    %    235    EB  "
      your output     : "  0x1099363010    42    eb    %    235    EB  "
      expected (nonprintable as hex) : "  0x109936310    42    eb    %    235    EB  "
      actual   (nonprintable as hex) : "  0x1099363010    42    eb    %    235    EB  "

Test 692 (mix_test_41) : FAILED.
    First line of code: {return test(
      expected output : "  235    G    %    0x109936310    42    Hello, World!  "
      your output     : "  235    G    %    0x1099363010    42    Hello, World!  "
      expected (nonprintable as hex) : "  235    G    %    0x109936310    42    Hello, World!  "
      actual   (nonprintable as hex) : "  235    G    %    0x1099363010    42    Hello, World!  "

Test 695 (mix_test_44) : FAILED.
    First line of code: {return test(
      expected output : "  Hello, World!    G    EB    %    42    0x109936310  "
      your output     : "  Hello, World!    G    EB    %    42    0x1099363010  "
      expected (nonprintable as hex) : "  Hello, World!    G    EB    %    42    0x109936310  "
      actual   (nonprintable as hex) : "  Hello, World!    G    EB    %    42    0x1099363010  "

Test 697 (mix_test_46) : FAILED.
    First line of code: {return test(
      expected output : "  eb    235    Hello, World!    42    0x109936310    0x109936310  "
      your output     : "  eb    235    Hello, World!    42    0x1099363010    0x109936310  "
      expected (nonprintable as hex) : "  eb    235    Hello, World!    42    0x109936310    0x109936310  "
      actual   (nonprintable as hex) : "  eb    235    Hello, World!    42    0x1099363010    0x109936310  "

Test 699 (mix_test_48) : FAILED.
    First line of code: {return test(
      expected output : "  G    42    %    EB    0x109936310    235  "
      your output     : "  G    42    %    EB    0x1099363010    235  "
      expected (nonprintable as hex) : "  G    42    %    EB    0x109936310    235  "
      actual   (nonprintable as hex) : "  G    42    %    EB    0x1099363010    235  "

Test 701 (mix_test_50) : FAILED.
    First line of code: {return test(
      expected output : "  %    0x109936310    EB    42    Hello, World!    eb  "
      your output     : "  %    0x1099363010    EB    42    Hello, World!    eb  "
      expected (nonprintable as hex) : "  %    0x109936310    EB    42    Hello, World!    eb  "
      actual   (nonprintable as hex) : "  %    0x1099363010    EB    42    Hello, World!    eb  "

Test 704 (mix_test_53) : FAILED.
    First line of code: {return test(
      expected output : "  eb    G    235    EB    0x109936310    0x109936310  "
      your output     : "  eb    G    235    EB    0x1099363010    0x109936310  "
      expected (nonprintable as hex) : "  eb    G    235    EB    0x109936310    0x109936310  "
      actual   (nonprintable as hex) : "  eb    G    235    EB    0x1099363010    0x109936310  "

Test 705 (mix_test_54) : FAILED.
    First line of code: {return test(
      expected output : "  0x109936310    235    G    Hello, World!    42    0x109936310  "
      your output     : "  0x109936310    235    G    Hello, World!    42    0x109999363306310  "
      expected (nonprintable as hex) : "  0x109936310    235    G    Hello, World!    42    0x109936310  "
      actual   (nonprintable as hex) : "  0x109936310    235    G    Hello, World!    42    0x109999363306310  "

Test 707 (mix_test_56) : FAILED.
    First line of code: {return test(
      expected output : "  %    42    EB    0x109936310    235    Hello, World!  "
      your output     : "  %    42    EB    0x1099363010    235    Hello, World!  "
      expected (nonprintable as hex) : "  %    42    EB    0x109936310    235    Hello, World!  "
      actual   (nonprintable as hex) : "  %    42    EB    0x1099363010    235    Hello, World!  "

Test 709 (mix_test_58) : FAILED.
    First line of code: {return test(
      expected output : "  G    42    235    eb    Hello, World!    0x109936310  "
      your output     : "  G    42    235    eb    Hello, World!    0x1099363010  "
      expected (nonprintable as hex) : "  G    42    235    eb    Hello, World!    0x109936310  "
      actual   (nonprintable as hex) : "  G    42    235    eb    Hello, World!    0x1099363010  "

Test 710 (mix_test_59) : FAILED.
    First line of code: {return test(
      expected output : "  G    42    Hello, World!    235    eb    0x109936310  "
      your output     : "  G    42    Hello, World!    235    eb    0x1099363010  "
      expected (nonprintable as hex) : "  G    42    Hello, World!    235    eb    0x109936310  "
      actual   (nonprintable as hex) : "  G    42    Hello, World!    235    eb    0x1099363010  "

Test 716 (mix_test_65) : FAILED.
    First line of code: {return test(
      expected output : "  G    %    42    0x109936310    235    EB  "
      your output     : "  G    %    42    0x1099363010    235    EB  "
      expected (nonprintable as hex) : "  G    %    42    0x109936310    235    EB  "
      actual   (nonprintable as hex) : "  G    %    42    0x1099363010    235    EB  "

Test 718 (mix_test_67) : FAILED.
    First line of code: {return test(
      expected output : "  Hello, World!    42    eb    235    G    0x109936310  "
      your output     : "  Hello, World!    42    eb    235    G    0x1099363010  "
      expected (nonprintable as hex) : "  Hello, World!    42    eb    235    G    0x109936310  "
      actual   (nonprintable as hex) : "  Hello, World!    42    eb    235    G    0x1099363010  "

Test 720 (mix_test_69) : FAILED.
    First line of code: {return test(
      expected output : "  %    Hello, World!    0x109936310    42    EB    G  "
      your output     : "  %    Hello, World!    0x1099363010    42    EB    G  "
      expected (nonprintable as hex) : "  %    Hello, World!    0x109936310    42    EB    G  "
      actual   (nonprintable as hex) : "  %    Hello, World!    0x1099363010    42    EB    G  "

Test 722 (mix_test_71) : FAILED.
    First line of code: {return test(
      expected output : "  Hello, World!    42    EB    G    %    0x109936310  "
      your output     : "  Hello, World!    42    EB    G    %    0x1099363010  "
      expected (nonprintable as hex) : "  Hello, World!    42    EB    G    %    0x109936310  "
      actual   (nonprintable as hex) : "  Hello, World!    42    EB    G    %    0x1099363010  "

Test 724 (mix_test_73) : FAILED.
    First line of code: {return test(
      expected output : "  %    EB    235    eb    0x109936310    G  "
      your output     : "  %    EB    235    eb    0x1099363010    G  "
      expected (nonprintable as hex) : "  %    EB    235    eb    0x109936310    G  "
      actual   (nonprintable as hex) : "  %    EB    235    eb    0x1099363010    G  "

Test 725 (mix_test_74) : FAILED.
    First line of code: {return test(
      expected output : "  0x109936310    G    Hello, World!    235    42    eb  "
      your output     : "  0x1099363010    G    Hello, World!    235    42    eb  "
      expected (nonprintable as hex) : "  0x109936310    G    Hello, World!    235    42    eb  "
      actual   (nonprintable as hex) : "  0x1099363010    G    Hello, World!    235    42    eb  "

Test 728 (mix_test_77) : FAILED.
    First line of code: {return test(
      expected output : "  EB    42    G    235    0x109936310    Hello, World!  "
      your output     : "  EB    42    G    235    0x1099363010    Hello, World!  "
      expected (nonprintable as hex) : "  EB    42    G    235    0x109936310    Hello, World!  "
      actual   (nonprintable as hex) : "  EB    42    G    235    0x1099363010    Hello, World!  "

Test 730 (mix_test_79) : FAILED.
    First line of code: {return test(
      expected output : "  Hello, World!    G    42    %    0x109936310    EB  "
      your output     : "  Hello, World!    G    42    %    0x1099363010    EB  "
      expected (nonprintable as hex) : "  Hello, World!    G    42    %    0x109936310    EB  "
      actual   (nonprintable as hex) : "  Hello, World!    G    42    %    0x1099363010    EB  "

Test 731 (mix_test_80) : FAILED.
    First line of code: {return test(
      expected output : "  0x109936310    %    G    235    Hello, World!    EB  "
      your output     : "  0x1099363010    %    G    235    Hello, World!    EB  "
      expected (nonprintable as hex) : "  0x109936310    %    G    235    Hello, World!    EB  "
      actual   (nonprintable as hex) : "  0x1099363010    %    G    235    Hello, World!    EB  "

Test 735 (mix_test_84) : FAILED.
    First line of code: {return test(
      expected output : "  0x109936310    eb    G    Hello, World!    235    0x109936310  "
      your output     : "  0x109936310    eb    G    Hello, World!    235    0x109999363306310  "
      expected (nonprintable as hex) : "  0x109936310    eb    G    Hello, World!    235    0x109936310  "
      actual   (nonprintable as hex) : "  0x109936310    eb    G    Hello, World!    235    0x109999363306310  "

Test 736 (mix_test_85) : FAILED.
    First line of code: {return test(
    SEGFAULT

Test 737 (mix_test_86) : FAILED.
    First line of code: {return test(
      expected output : "  0x109936310    G    235    EB    Hello, World!    0x109936310  "
      your output     : "  0x109936310    G    235    EB    Hello, World!    0x109999363306310  "
      expected (nonprintable as hex) : "  0x109936310    G    235    EB    Hello, World!    0x109936310  "
      actual   (nonprintable as hex) : "  0x109936310    G    235    EB    Hello, World!    0x109999363306310  "

Test 739 (mix_test_88) : FAILED.
    First line of code: {return test(
      expected output : "  42    G    0x109936310    %    EB    235  "
      your output     : "  42    G    0x1099363010    %    EB    235  "
      expected (nonprintable as hex) : "  42    G    0x109936310    %    EB    235  "
      actual   (nonprintable as hex) : "  42    G    0x1099363010    %    EB    235  "

Test 740 (mix_test_89) : FAILED.
    First line of code: {return test(
      expected output : "  Hello, World!    G    42    eb    0x109936310    235  "
      your output     : "  Hello, World!    G    42    eb    0x1099363010    235  "
      expected (nonprintable as hex) : "  Hello, World!    G    42    eb    0x109936310    235  "
      actual   (nonprintable as hex) : "  Hello, World!    G    42    eb    0x1099363010    235  "

Test 742 (mix_test_91) : FAILED.
    First line of code: {return test(
      expected output : "  235    0x109936310    EB    G    %    eb  "
      your output     : "  235    0x1099363010    EB    G    %    eb  "
      expected (nonprintable as hex) : "  235    0x109936310    EB    G    %    eb  "
      actual   (nonprintable as hex) : "  235    0x1099363010    EB    G    %    eb  "

Test 744 (mix_test_93) : FAILED.
    First line of code: {return test(
      expected output : "  eb    G    Hello, World!    0x109936310    235    42  "
      your output     : "  eb    G    Hello, World!    0x1099363010    235    42  "
      expected (nonprintable as hex) : "  eb    G    Hello, World!    0x109936310    235    42  "
      actual   (nonprintable as hex) : "  eb    G    Hello, World!    0x1099363010    235    42  "

Test 747 (mix_test_96) : FAILED.
    First line of code: {return test(
      expected output : "  EB    0x109936310    G    Hello, World!    42    235  "
      your output     : "  EB    0x1099363010    G    Hello, World!    42    235  "
      expected (nonprintable as hex) : "  EB    0x109936310    G    Hello, World!    42    235  "
      actual   (nonprintable as hex) : "  EB    0x1099363010    G    Hello, World!    42    235  "

Test 749 (mix_test_98) : FAILED.
    First line of code: {return test(
      expected output : "  42    Hello, World!    %    0x109936310    EB    G  "
      your output     : "  42    Hello, World!    %    0x1099363010    EB    G  "
      expected (nonprintable as hex) : "  42    Hello, World!    %    0x109936310    EB    G  "
      actual   (nonprintable as hex) : "  42    Hello, World!    %    0x1099363010    EB    G  "

Test 768 (mix_successive_61) : FAILED.
    First line of code: {return ( test("%p", &mx_i) + test("%c", mx_c));}
      expected output : "0x109936310G"
      your output     : "0x1099363010G"
      expected (nonprintable as hex) : "0x109936310G"
      actual   (nonprintable as hex) : "0x1099363010G"

Test 4192 (notintsubject_o_neg_prec_star_01) : FAILED.
    First line of code: {return test("%.*o", -3, 12345);}
      expected output : "30071"
      your output     : "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      expected (nonprintable as hex) : "30071"
      actual   (nonprintable as hex) : "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

Test 4193 (notintsubject_o_neg_prec_star_02) : FAILED.
    First line of code: {return test("%.*o", -1, 12345);}
      expected output : "30071"
      your output     : "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
      expected (nonprintable as hex) : "30071"
      actual   (nonprintable as hex) : "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

Test 4194 (notintsubject_o_neg_prec_star_03) : FAILED.
    First line of code: {return test("%.*o", -1, 0);}
      expected output : "0"
      your output     : "9d05e6c"
      expected (nonprintable as hex) : "0"
      actual   (nonprintable as hex) : "9d05e6c"

Test 4201 (s_neg_prec_star_01) : FAILED.
    First line of code: {return test("%.*s", -3, 0);}
      expected output : "(null)"
      your output     : "   (null)"
      expected (nonprintable as hex) : "(null)"
      actual   (nonprintable as hex) : "   (null)"

Test 4203 (p_neg_prec_star_01) : FAILED.
    First line of code: {return test("%.*p", -3, s_hello);}
      expected output : "0x10990943e"
      your output     : "0x109909403e"
      expected (nonprintable as hex) : "0x10990943e"
      actual   (nonprintable as hex) : "0x109909403e"

Test 4204 (p_neg_prec_star_02) : FAILED.
    First line of code: {return test("%.*p", -1, s_hello);}
      expected output : "0x10990943e"
      your output     : "0x109909403e"
      expected (nonprintable as hex) : "0x10990943e"
      actual   (nonprintable as hex) : "0x109909403e"

